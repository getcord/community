.container {
  display: flex;
  flex-direction: column;
  gap: 18px;
  height: 100%;

  --thread-border-radius: 0px;
  --thread-border-bottom: 2px solid var(--cord-grey);
  --thread-padding-bottom: 24px;
  --thread-margin-bottom: 12px;

  --thread-message-border-bottom: 1px solid var(--cord-grey-mid-light);
  --thread-message-padding-bottom: 8px;
}

.heading {
  display: flex;
  flex-direction: column;
  justify-content: center;
  /* padding left to match the cord's Thread */
  padding-left: 12px;
  gap: 8px;
  margin-top: 20px;
}

.threadName {
  margin: 0;
}

.icons {
  display: flex;
  align-items: center;
}

.pinIcon {
  stroke-width: 4;
  height: 24px;
  width: 24px;
}

/* These two need to match, so using the variables from above */
.serverMessage:first-child {
  border-radius: var(--thread-border-radius);
  padding-bottom: var(--thread-padding-bottom);
  border-bottom: var(--thread-border-bottom);
  margin-bottom: var(--thread-margin-bottom);
  animation: fadeBackground 3s ease-in-out;
}

.serverMessage:not(:first-child) {
  padding-top: 16px;
}
.serverMessage {
  border-bottom: var(--thread-message-border-bottom);
  display: grid;
  grid-gap: 8px;
  grid-template-columns: minmax(0, auto) 1fr;
  grid-template-rows: minmax(0, auto) auto auto;
  grid-template-areas:
    'avatar name'
    '. messageContent'
    '. reactions';
  padding-left: 12px;
  padding-bottom: var(--thread-message-padding-bottom);
}

.serverMessageContent {
  grid-area: messageContent;
}

.serverAvatar {
  grid-area: avatar;
  border-radius: 4px;
}
.serverNameAndTimestamp {
  grid-area: name;
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
  align-items: center;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.serverAuthorName {
  font-weight: bold;
}

.serverNameAndTimestamp :global(.cord-v2.cord-timestamp) {
  color: var(--cord-grey-dark);
}
.serverComposerContainer {
  display: flex;
  flex-direction: column;
  background-color: var(--cord-purple-light);
  padding: 20px;
  align-items: center;
}

/* Cord Component Styles */
.container
  :global(
    .cord-thread-container
      .cord-inline-thread
      .cord-scroll-container
      .cord-message-block:first-child
      .cord-message-options-buttons
  ) {
  flex-direction: row;
}
.container
  :global(
    .cord-component
      .cord-thread-container
      .cord-inline-thread
      .cord-scroll-container
      .cord-message-block:first-child
      .cord-message.cord-no-reactions
      .cord-message-options-buttons
  ) {
  flex-direction: row;
  visibility: visible;
}

/* for betaV2 thread */
.container :global(.cord-v2.cord-thread) {
  border: none;
}

/* The SSR and client side rendered thread need to match, so using the variables from above */
.container :global(.cord-v2.cord-message:first-child) {
  border-radius: var(--thread-border-radius);
  padding-bottom: var(--thread-padding-bottom);
  margin-bottom: var(--thread-margin-bottom);
  border-bottom: var(--thread-border-bottom);
  animation: fadeBackground 3s ease-in-out;
}

.container :global(.cord-v2.cord-message) {
  margin-top: 8px;
  border-bottom: var(--thread-message-border-bottom);

  padding-bottom: var(--thread-message-padding-bottom);
}

.container :global(.cord-v2.cord-composer),
.container :global(.cord-v2.cord-thread-seen-by-container) {
  margin-top: 12px;
}

.solutionLabel.marginLeft {
  margin-left: auto;
}

.leftIcon {
  padding: 2px;
}

.markedAsAnswered:global(.cord-v2 .cord-menu-item-button),
.markedAsAnswered:global(.cord-v2 .cord-menu-item-button .cord-label) {
  color: var(--cord-green);
}

.deleteActionMenuItem:global(.cord-v2 .cord-menu-item-button),
.deleteActionMenuItem:global(.cord-v2 .cord-menu-item-button .cord-label) {
  color: var(--cord-alert);
}

.usernameContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 4px;
}

.usernameContainer img {
  margin-top: 4px;
}

@keyframes fadeBackground {
  0% {
    background-color: var(--cord-grey-mid-light);
  }
  100% {
    background-color: transparent;
  }
}

.container :global(.cord-v2 .cord-link-preview-image) {
  max-height: 200px;
  max-width: 300px;
}

.container :global(.cord-v2 .cord-message-link-previews) {
  flex-direction: column;
}